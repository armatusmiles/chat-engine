// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dbmanage.proto

package dbmanage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// if offset_top == 0, we got last N(count_messages) messages
type ChatMessagesInterval struct {
	CountMessages        uint32   `protobuf:"varint,1,opt,name=count_messages,json=countMessages,proto3" json:"count_messages,omitempty"`
	OffsetTop            uint32   `protobuf:"varint,2,opt,name=offset_top,json=offsetTop,proto3" json:"offset_top,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessagesInterval) Reset()         { *m = ChatMessagesInterval{} }
func (m *ChatMessagesInterval) String() string { return proto.CompactTextString(m) }
func (*ChatMessagesInterval) ProtoMessage()    {}
func (*ChatMessagesInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{0}
}

func (m *ChatMessagesInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessagesInterval.Unmarshal(m, b)
}
func (m *ChatMessagesInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessagesInterval.Marshal(b, m, deterministic)
}
func (m *ChatMessagesInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessagesInterval.Merge(m, src)
}
func (m *ChatMessagesInterval) XXX_Size() int {
	return xxx_messageInfo_ChatMessagesInterval.Size(m)
}
func (m *ChatMessagesInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessagesInterval.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessagesInterval proto.InternalMessageInfo

func (m *ChatMessagesInterval) GetCountMessages() uint32 {
	if m != nil {
		return m.CountMessages
	}
	return 0
}

func (m *ChatMessagesInterval) GetOffsetTop() uint32 {
	if m != nil {
		return m.OffsetTop
	}
	return 0
}

type AuthResponse struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	SessionId            string   `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{1}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type AuthData struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthData) Reset()         { *m = AuthData{} }
func (m *AuthData) String() string { return proto.CompactTextString(m) }
func (*AuthData) ProtoMessage()    {}
func (*AuthData) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{2}
}

func (m *AuthData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthData.Unmarshal(m, b)
}
func (m *AuthData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthData.Marshal(b, m, deterministic)
}
func (m *AuthData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthData.Merge(m, src)
}
func (m *AuthData) XXX_Size() int {
	return xxx_messageInfo_AuthData.Size(m)
}
func (m *AuthData) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthData.DiscardUnknown(m)
}

var xxx_messageInfo_AuthData proto.InternalMessageInfo

func (m *AuthData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SeqNumber struct {
	SeqNumber            uint64   `protobuf:"varint,1,opt,name=seq_number,json=seqNumber,proto3" json:"seq_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeqNumber) Reset()         { *m = SeqNumber{} }
func (m *SeqNumber) String() string { return proto.CompactTextString(m) }
func (*SeqNumber) ProtoMessage()    {}
func (*SeqNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{3}
}

func (m *SeqNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeqNumber.Unmarshal(m, b)
}
func (m *SeqNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeqNumber.Marshal(b, m, deterministic)
}
func (m *SeqNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeqNumber.Merge(m, src)
}
func (m *SeqNumber) XXX_Size() int {
	return xxx_messageInfo_SeqNumber.Size(m)
}
func (m *SeqNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_SeqNumber.DiscardUnknown(m)
}

var xxx_messageInfo_SeqNumber proto.InternalMessageInfo

func (m *SeqNumber) GetSeqNumber() uint64 {
	if m != nil {
		return m.SeqNumber
	}
	return 0
}

// sequence number of message in room
type SeqNumberResponse struct {
	SeqNumber            *SeqNumber `protobuf:"bytes,1,opt,name=seq_number,json=seqNumber,proto3" json:"seq_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SeqNumberResponse) Reset()         { *m = SeqNumberResponse{} }
func (m *SeqNumberResponse) String() string { return proto.CompactTextString(m) }
func (*SeqNumberResponse) ProtoMessage()    {}
func (*SeqNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{4}
}

func (m *SeqNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeqNumberResponse.Unmarshal(m, b)
}
func (m *SeqNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeqNumberResponse.Marshal(b, m, deterministic)
}
func (m *SeqNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeqNumberResponse.Merge(m, src)
}
func (m *SeqNumberResponse) XXX_Size() int {
	return xxx_messageInfo_SeqNumberResponse.Size(m)
}
func (m *SeqNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SeqNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SeqNumberResponse proto.InternalMessageInfo

func (m *SeqNumberResponse) GetSeqNumber() *SeqNumber {
	if m != nil {
		return m.SeqNumber
	}
	return nil
}

type ChatMessage struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SendTime             uint64   `protobuf:"varint,2,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	MessageId            string   `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{5}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ChatMessage) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ChatMessage) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *ChatMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChatMessageResponse struct {
	Messages             []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChatMessageResponse) Reset()         { *m = ChatMessageResponse{} }
func (m *ChatMessageResponse) String() string { return proto.CompactTextString(m) }
func (*ChatMessageResponse) ProtoMessage()    {}
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{6}
}

func (m *ChatMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageResponse.Unmarshal(m, b)
}
func (m *ChatMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageResponse.Marshal(b, m, deterministic)
}
func (m *ChatMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageResponse.Merge(m, src)
}
func (m *ChatMessageResponse) XXX_Size() int {
	return xxx_messageInfo_ChatMessageResponse.Size(m)
}
func (m *ChatMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageResponse proto.InternalMessageInfo

func (m *ChatMessageResponse) GetMessages() []*ChatMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

type RoomChatMessage struct {
	Message              *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	RoomId               string       `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RoomChatMessage) Reset()         { *m = RoomChatMessage{} }
func (m *RoomChatMessage) String() string { return proto.CompactTextString(m) }
func (*RoomChatMessage) ProtoMessage()    {}
func (*RoomChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{7}
}

func (m *RoomChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomChatMessage.Unmarshal(m, b)
}
func (m *RoomChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomChatMessage.Marshal(b, m, deterministic)
}
func (m *RoomChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomChatMessage.Merge(m, src)
}
func (m *RoomChatMessage) XXX_Size() int {
	return xxx_messageInfo_RoomChatMessage.Size(m)
}
func (m *RoomChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RoomChatMessage proto.InternalMessageInfo

func (m *RoomChatMessage) GetMessage() *ChatMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *RoomChatMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type PrivateChatMessage struct {
	Message              *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	DestUserId           string       `protobuf:"bytes,2,opt,name=dest_user_id,json=destUserId,proto3" json:"dest_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PrivateChatMessage) Reset()         { *m = PrivateChatMessage{} }
func (m *PrivateChatMessage) String() string { return proto.CompactTextString(m) }
func (*PrivateChatMessage) ProtoMessage()    {}
func (*PrivateChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_79857f230aaf8d24, []int{8}
}

func (m *PrivateChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateChatMessage.Unmarshal(m, b)
}
func (m *PrivateChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateChatMessage.Marshal(b, m, deterministic)
}
func (m *PrivateChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateChatMessage.Merge(m, src)
}
func (m *PrivateChatMessage) XXX_Size() int {
	return xxx_messageInfo_PrivateChatMessage.Size(m)
}
func (m *PrivateChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateChatMessage proto.InternalMessageInfo

func (m *PrivateChatMessage) GetMessage() *ChatMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PrivateChatMessage) GetDestUserId() string {
	if m != nil {
		return m.DestUserId
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatMessagesInterval)(nil), "dbmanage.ChatMessagesInterval")
	proto.RegisterType((*AuthResponse)(nil), "dbmanage.AuthResponse")
	proto.RegisterType((*AuthData)(nil), "dbmanage.AuthData")
	proto.RegisterType((*SeqNumber)(nil), "dbmanage.SeqNumber")
	proto.RegisterType((*SeqNumberResponse)(nil), "dbmanage.SeqNumberResponse")
	proto.RegisterType((*ChatMessage)(nil), "dbmanage.ChatMessage")
	proto.RegisterType((*ChatMessageResponse)(nil), "dbmanage.ChatMessageResponse")
	proto.RegisterType((*RoomChatMessage)(nil), "dbmanage.RoomChatMessage")
	proto.RegisterType((*PrivateChatMessage)(nil), "dbmanage.PrivateChatMessage")
}

func init() { proto.RegisterFile("dbmanage.proto", fileDescriptor_79857f230aaf8d24) }

var fileDescriptor_79857f230aaf8d24 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xd6, 0xb6, 0xd2, 0x25, 0xaf, 0xdd, 0x26, 0xdc, 0x31, 0x42, 0xc6, 0xd0, 0x14, 0x09, 0x69,
	0xe2, 0x30, 0x44, 0xb9, 0xed, 0x86, 0x98, 0x34, 0x72, 0x28, 0x9a, 0xd2, 0x21, 0x21, 0x81, 0x14,
	0xb9, 0xcb, 0x5b, 0x17, 0x69, 0xb6, 0xb3, 0xd8, 0x2d, 0x17, 0xfe, 0x70, 0x8e, 0xc8, 0x4e, 0xec,
	0x98, 0xb5, 0x20, 0x01, 0xc7, 0xef, 0xfd, 0xf8, 0x9e, 0xbf, 0xef, 0xd9, 0x86, 0xdd, 0x62, 0xc6,
	0x28, 0xa7, 0x73, 0x3c, 0xad, 0x6a, 0xa1, 0x04, 0x09, 0x2c, 0x4e, 0xbe, 0xc2, 0xfe, 0xfb, 0x5b,
	0xaa, 0x26, 0x28, 0x25, 0x9d, 0xa3, 0x4c, 0xb9, 0xc2, 0x7a, 0x49, 0xef, 0xc8, 0x4b, 0xd8, 0xbd,
	0x16, 0x0b, 0xae, 0x72, 0xd6, 0x66, 0xa2, 0x8d, 0xe3, 0x8d, 0x93, 0x9d, 0x6c, 0xc7, 0x44, 0x6d,
	0x39, 0x39, 0x02, 0x10, 0x37, 0x37, 0x12, 0x55, 0xae, 0x44, 0x15, 0x6d, 0x9a, 0x92, 0xb0, 0x89,
	0x5c, 0x89, 0x2a, 0xc9, 0x61, 0xf8, 0x6e, 0xa1, 0x6e, 0x33, 0x94, 0x95, 0xe0, 0x12, 0x49, 0x0c,
	0xc1, 0x42, 0x62, 0xcd, 0x29, 0x43, 0xc3, 0x17, 0x66, 0x0e, 0x93, 0x7d, 0x78, 0x84, 0x8c, 0x96,
	0x77, 0x86, 0x25, 0xcc, 0x1a, 0xa0, 0x07, 0x48, 0x94, 0xb2, 0x14, 0x3c, 0x2f, 0x8b, 0x68, 0xcb,
	0xa4, 0xc2, 0x36, 0x92, 0x16, 0xc9, 0x67, 0x08, 0xf4, 0x80, 0x73, 0xaa, 0xe8, 0x3f, 0x90, 0xc7,
	0x10, 0x54, 0x54, 0xca, 0x6f, 0xa2, 0xb6, 0xd4, 0x0e, 0x27, 0xaf, 0x20, 0x9c, 0xe2, 0xfd, 0xc7,
	0x05, 0x9b, 0x61, 0xdd, 0x9c, 0xe2, 0x3e, 0xe7, 0x06, 0x19, 0xf2, 0x9e, 0x3e, 0x45, 0x9b, 0x4e,
	0x2e, 0xe0, 0xb1, 0xab, 0x75, 0x5a, 0xc7, 0x2b, 0x3d, 0x83, 0xf1, 0xe8, 0xd4, 0x2d, 0xa2, 0x6b,
	0xf0, 0x88, 0xbe, 0xc3, 0xc0, 0xdb, 0x06, 0x79, 0x0a, 0xdb, 0x5a, 0x81, 0x56, 0xde, 0x08, 0xea,
	0x6b, 0x98, 0x16, 0xe4, 0x10, 0x42, 0x89, 0xbc, 0xc8, 0x55, 0xc9, 0xd0, 0x48, 0xea, 0x65, 0x81,
	0x0e, 0x5c, 0x95, 0x0c, 0xf5, 0x61, 0xdb, 0xa5, 0x79, 0x96, 0xb5, 0x91, 0xb4, 0x20, 0x11, 0x6c,
	0xb7, 0x20, 0xea, 0x99, 0x9c, 0x85, 0xc9, 0x07, 0x18, 0x79, 0xd3, 0x9d, 0x90, 0x37, 0x10, 0x78,
	0x97, 0x60, 0xeb, 0x64, 0x30, 0x7e, 0xd2, 0xc9, 0xf0, 0x1b, 0x5c, 0x59, 0xf2, 0x05, 0xf6, 0x32,
	0x21, 0x98, 0xaf, 0xe5, 0x75, 0x37, 0xb6, 0xf1, 0xe2, 0x37, 0x24, 0xb6, 0x4a, 0x8b, 0xaf, 0x85,
	0x60, 0x5a, 0x43, 0xb3, 0xb4, 0xbe, 0x86, 0x69, 0x91, 0xcc, 0x81, 0x5c, 0xd6, 0xe5, 0x92, 0x2a,
	0xfc, 0x2f, 0xfe, 0x63, 0x18, 0x16, 0x28, 0x55, 0x6e, 0x1d, 0x6e, 0x86, 0x80, 0x8e, 0x7d, 0x32,
	0x2e, 0x8f, 0x7f, 0x6c, 0x42, 0x70, 0x3e, 0x9b, 0x18, 0x0e, 0x72, 0x06, 0xc3, 0x0c, 0xe7, 0xa5,
	0x54, 0x58, 0xeb, 0x34, 0x21, 0x1d, 0xbd, 0xbd, 0x81, 0xf1, 0xc1, 0xaf, 0x31, 0xe7, 0xe0, 0x04,
	0x46, 0x53, 0xba, 0xc4, 0x87, 0x96, 0x3c, 0xeb, 0xca, 0x1f, 0xa4, 0xe2, 0xc3, 0x75, 0x17, 0xc5,
	0xd2, 0x4d, 0xe1, 0x40, 0xd3, 0xad, 0x31, 0xe1, 0x79, 0xd7, 0xb6, 0x9a, 0xfd, 0x33, 0xe9, 0x25,
	0xec, 0x5d, 0xa0, 0xf2, 0xff, 0x02, 0xf2, 0x62, 0xad, 0x83, 0xee, 0x8f, 0x88, 0x8f, 0xd6, 0x3b,
	0x6c, 0x19, 0xcf, 0x9a, 0xc7, 0x8f, 0x5c, 0x95, 0xd7, 0x54, 0xe1, 0xdf, 0x38, 0x36, 0xeb, 0x9b,
	0x7f, 0xea, 0xed, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0xa3, 0x4c, 0x2d, 0xb9, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DbManageClient is the client API for DbManage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DbManageClient interface {
	// returns true if save in db successful
	RegisterUser(ctx context.Context, in *AuthData, opts ...grpc.CallOption) (*AuthResponse, error)
	SaveRoomChatMessage(ctx context.Context, in *RoomChatMessage, opts ...grpc.CallOption) (*SeqNumberResponse, error)
	SavePrivateChatMessage(ctx context.Context, in *PrivateChatMessage, opts ...grpc.CallOption) (*SeqNumberResponse, error)
	GetChatMessages(ctx context.Context, in *ChatMessagesInterval, opts ...grpc.CallOption) (*ChatMessageResponse, error)
	// returns status and non empty sessionID if Auth is successful
	Authenticate(ctx context.Context, in *AuthData, opts ...grpc.CallOption) (*AuthResponse, error)
}

type dbManageClient struct {
	cc *grpc.ClientConn
}

func NewDbManageClient(cc *grpc.ClientConn) DbManageClient {
	return &dbManageClient{cc}
}

func (c *dbManageClient) RegisterUser(ctx context.Context, in *AuthData, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/dbmanage.DbManage/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbManageClient) SaveRoomChatMessage(ctx context.Context, in *RoomChatMessage, opts ...grpc.CallOption) (*SeqNumberResponse, error) {
	out := new(SeqNumberResponse)
	err := c.cc.Invoke(ctx, "/dbmanage.DbManage/SaveRoomChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbManageClient) SavePrivateChatMessage(ctx context.Context, in *PrivateChatMessage, opts ...grpc.CallOption) (*SeqNumberResponse, error) {
	out := new(SeqNumberResponse)
	err := c.cc.Invoke(ctx, "/dbmanage.DbManage/SavePrivateChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbManageClient) GetChatMessages(ctx context.Context, in *ChatMessagesInterval, opts ...grpc.CallOption) (*ChatMessageResponse, error) {
	out := new(ChatMessageResponse)
	err := c.cc.Invoke(ctx, "/dbmanage.DbManage/GetChatMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbManageClient) Authenticate(ctx context.Context, in *AuthData, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/dbmanage.DbManage/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DbManageServer is the server API for DbManage service.
type DbManageServer interface {
	// returns true if save in db successful
	RegisterUser(context.Context, *AuthData) (*AuthResponse, error)
	SaveRoomChatMessage(context.Context, *RoomChatMessage) (*SeqNumberResponse, error)
	SavePrivateChatMessage(context.Context, *PrivateChatMessage) (*SeqNumberResponse, error)
	GetChatMessages(context.Context, *ChatMessagesInterval) (*ChatMessageResponse, error)
	// returns status and non empty sessionID if Auth is successful
	Authenticate(context.Context, *AuthData) (*AuthResponse, error)
}

func RegisterDbManageServer(s *grpc.Server, srv DbManageServer) {
	s.RegisterService(&_DbManage_serviceDesc, srv)
}

func _DbManage_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbManageServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbmanage.DbManage/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbManageServer).RegisterUser(ctx, req.(*AuthData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbManage_SaveRoomChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbManageServer).SaveRoomChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbmanage.DbManage/SaveRoomChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbManageServer).SaveRoomChatMessage(ctx, req.(*RoomChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbManage_SavePrivateChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbManageServer).SavePrivateChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbmanage.DbManage/SavePrivateChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbManageServer).SavePrivateChatMessage(ctx, req.(*PrivateChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbManage_GetChatMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessagesInterval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbManageServer).GetChatMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbmanage.DbManage/GetChatMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbManageServer).GetChatMessages(ctx, req.(*ChatMessagesInterval))
	}
	return interceptor(ctx, in, info, handler)
}

func _DbManage_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbManageServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbmanage.DbManage/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbManageServer).Authenticate(ctx, req.(*AuthData))
	}
	return interceptor(ctx, in, info, handler)
}

var _DbManage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dbmanage.DbManage",
	HandlerType: (*DbManageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _DbManage_RegisterUser_Handler,
		},
		{
			MethodName: "SaveRoomChatMessage",
			Handler:    _DbManage_SaveRoomChatMessage_Handler,
		},
		{
			MethodName: "SavePrivateChatMessage",
			Handler:    _DbManage_SavePrivateChatMessage_Handler,
		},
		{
			MethodName: "GetChatMessages",
			Handler:    _DbManage_GetChatMessages_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _DbManage_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dbmanage.proto",
}
